// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define([], function() {
    var ToggleController, controllers;
    $.easing.general = function(x, t, b, c, d) {
      if ((t /= d) < (1 / 2.75)) {
        return c * (7.5625 * t * t) + b;
      } else if (t < (2 / 2.75)) {
        return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;
      } else if (t < (2.5 / 2.75)) {
        return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;
      } else {
        return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;
      }
    };
    ToggleController = (function() {

      ToggleController.prototype.config = {
        animationTime: 1000,
        visible: true
      };

      function ToggleController(trigger, container) {
        this.hide = __bind(this.hide, this);

        this.show = __bind(this.show, this);

        var _this = this;
        this.container = container;
        $(trigger).click(function() {
          if (_this.config.visible) {
            return _this.hide();
          } else {
            return _this.show();
          }
        });
      }

      ToggleController.prototype.show = function() {
        var _this = this;
        return this.container.slideDown(this.config.animationTime, "general", function() {
          return _this.config.visible = true;
        });
      };

      ToggleController.prototype.hide = function() {
        var _this = this;
        return this.container.slideUp(this.config.animationTime, "general", function() {
          return _this.config.visible = false;
        });
      };

      return ToggleController;

    })();
    controllers = [];
    return $('#container').children("div").each(function() {
      var container, element, trigger;
      element = $(this);
      trigger = element.find(".exit");
      container = element.children("canvas");
      return controllers.push(new ToggleController(trigger, container));
    });
  });

}).call(this);
