// Generated by CoffeeScript 1.4.0
(function() {

  define(["base_module", "animation"], function(baseModule, animation) {
    var blueMass, canvasElements, elementData, modules, parent, parentElements, playListener;
    parent = $('#container');
    parentElements = {
      "lab": $('#container > div:nth-child(1) > .content'),
      "red": $('#container > div:nth-child(2) > .content'),
      "blue": $('#container > div:nth-child(3) > .content'),
      "custom": $('#container > div:nth-child(4) > .content')
    };
    canvasElements = {
      "lab": parentElements.lab.children("canvas"),
      "red": parentElements.red.children("canvas"),
      "blue": parentElements.blue.children("canvas"),
      "custom": parentElements.custom.children("canvas")
    };
    elementData = {
      lab: {
        a: {
          velocity: 5,
          mass: 3
        },
        b: {
          velocity: -1,
          mass: 5
        },
        frame: {
          velocity: 0
        }
      },
      red: {
        a: {
          mass: 3,
          velocity: 0
        },
        b: {
          mass: 5,
          velocity: -6
        },
        frame: {
          velocity: 0
        }
      },
      blue: {
        a: {
          mass: 3,
          velocity: 6
        },
        b: {
          mass: 5,
          velocity: 0
        },
        frame: {
          velocity: -1
        }
      },
      custom: {
        a: {
          mass: 3,
          velocity: 3
        },
        b: {
          mass: 5,
          velocity: -3
        },
        frame: {
          velocity: 2
        }
      }
    };
    modules = {
      lab: new baseModule(canvasElements.lab[0], elementData.lab),
      red: new baseModule(canvasElements.red[0], elementData.red),
      blue: new baseModule(canvasElements.blue[0], elementData.blue),
      custom: new baseModule(canvasElements.custom[0], elementData.custom)
    };
    (playListener = function() {
      parentElements.lab.find(".play").click(function() {
        return modules.lab.play();
      });
      parentElements.red.find(".play").click(function() {
        return modules.red.play();
      });
      parentElements.blue.find(".play").click(function() {
        return modules.blue.play();
      });
      return parentElements.custom.find(".play").click(function() {
        return modules.custom.play();
      });
    })();
    return (blueMass = function() {
      var element;
      element = parent.find(".blue_mass");
      return element.children("input").change(function() {
        var current, slider, value, _i, _len, _results;
        current = $(this);
        value = $(this).attr("value");
        _results = [];
        for (_i = 0, _len = element.length; _i < _len; _i++) {
          slider = element[_i];
          $(slider).children("input").attr("value", value);
          $(slider).find("div.label").children("span:nth-child(2)").text(value);
          modules.lab.elements.b.setMass(parseInt(value));
          modules.red.elements.b.setMass(parseInt(value));
          modules.blue.elements.b.setMass(parseInt(value));
          _results.push(modules.custom.elements.b.setMass(parseInt(value)));
        }
        return _results;
      });
    })();
  });

}).call(this);
