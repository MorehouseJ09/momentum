// Generated by CoffeeScript 1.4.0
(function() {

  define(["base_module", "animation"], function(baseModule, animation) {
    var canvasElements, elementData, massListener, modules, parent, parentElements, playListener;
    parent = $('#container');
    parentElements = {
      "lab": $('#container > div:nth-child(1) > .content'),
      "red": $('#container > div:nth-child(2) > .content'),
      "blue": $('#container > div:nth-child(3) > .content'),
      "custom": $('#container > div:nth-child(4) > .content')
    };
    canvasElements = {
      "lab": parentElements.lab.children("canvas"),
      "red": parentElements.red.children("canvas"),
      "blue": parentElements.blue.children("canvas"),
      "custom": parentElements.custom.children("canvas")
    };
    elementData = {
      lab: {
        name: "lab",
        a: {
          velocity: 8,
          mass: 3,
          color: "red",
          left: true
        },
        b: {
          velocity: -5,
          mass: 5,
          color: "blue",
          left: false
        },
        frame: {
          velocity: 0
        }
      },
      red: {
        name: "red",
        a: {
          mass: 3,
          velocity: 5,
          left: true,
          color: "red"
        },
        b: {
          mass: 5,
          velocity: -6,
          color: "blue",
          left: false
        },
        frame: {
          velocity: 0
        }
      },
      blue: {
        name: "blue",
        a: {
          mass: 3,
          velocity: 6,
          color: "red",
          left: true
        },
        b: {
          mass: 5,
          velocity: 0,
          color: "blue",
          left: false
        },
        frame: {
          velocity: -1
        }
      },
      custom: {
        name: "custom",
        a: {
          mass: 3,
          velocity: 3,
          color: "red",
          left: true
        },
        b: {
          mass: 5,
          velocity: -3,
          color: "blue",
          left: false
        },
        frame: {
          velocity: 2
        }
      }
    };
    modules = {
      lab: new baseModule(canvasElements.lab[0], elementData.lab),
      red: new baseModule(canvasElements.red[0], elementData.red),
      blue: new baseModule(canvasElements.blue[0], elementData.blue),
      custom: new baseModule(canvasElements.custom[0], elementData.custom)
    };
    (playListener = function() {
      parentElements.lab.find(".play").click(function() {
        return modules.lab.play();
      });
      parentElements.red.find(".play").click(function() {
        return modules.red.play();
      });
      parentElements.blue.find(".play").click(function() {
        return modules.blue.play();
      });
      return parentElements.custom.find(".play").click(function() {
        return modules.custom.play();
      });
    })();
    return (massListener = function() {
      var colorClass, listen, _i, _len, _ref, _results,
        _this = this;
      listen = function(colorClass) {
        var elements;
        elements = parent.find(colorClass).find("input");
        return elements.change(function() {
          var key, module, setMass, value, _element;
          value = $(this).attr("value");
          setMass = (function() {
            var _results;
            _results = [];
            for (key in modules) {
              module = modules[key];
              _element = colorClass === ".blue_mass" ? module.elements.b : module.elements.a;
              _results.push(_element.setMass(value));
            }
            return _results;
          })();
          return elements.each(function() {
            var label;
            $(this).attr("value", value);
            label = $(this).parent().children(".label").children("span:nth-child(2)");
            return label.text(value);
          });
        });
      };
      _ref = [".blue_mass", ".red_mass"];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        colorClass = _ref[_i];
        _results.push(listen(colorClass));
      }
      return _results;
    })();
  });

}).call(this);
