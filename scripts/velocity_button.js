// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define([], function() {
    var VelocityButton;
    return VelocityButton = (function() {
      var settings;

      settings = {
        general: {
          bottomOffset: 20,
          rightOffset: 20
        },
        style: {
          strokeColor: "black",
          strokeWidth: 2.5,
          fillColor: "black"
        },
        tip: {
          accuracy: 20,
          radius: 8,
          position: 0
        },
        tail: {
          rightOffset: 20,
          width: 4,
          segments: 10,
          minLength: 5,
          maxLength: 20
        }
      };

      function VelocityButton(paper, _settings) {
        this.tipCollision = __bind(this.tipCollision, this);
        this.test = "55";
        this.paper = paper;
        this.tool = new this.paper.Tool();
        this.settings = {
          dragLength: settings.tail.minLength,
          type: "a",
          height: this.paper.view.size.height,
          width: this.paper.view.size.width,
          tip: {
            center: void 0
          },
          tail: {
            length: (settings.tail.minLength + settings.tail.maxLength) * 0.5
          }
        };
        this.shapeInit();
      }

      VelocityButton.prototype.tipCollision = function(point) {
        var delta_x, delta_y;
        delta_x = point.x - this.settings.tip.center.x;
        delta_y = point.y - this.settings.tip.center.y;
        delta_x = delta_x < 0 ? -1 * delta_x : delta_x;
        delta_y = delta_y < 0 ? -1 * delta_y : delta_y;
        delta_x = delta_x - 30;
        delta_y = delta_y - 50;
        return delta_x < settings.tipAccuracy && delta_y < settings.tipAccuracy;
      };

      VelocityButton.prototype.drag = function(event) {
        if (!this.tipCollision(event.downPoint)) {
          alert("no move");
          return;
        }
        return this.tip.position = new this.paper.Point(20, 20);
      };

      VelocityButton.prototype.shapeInit = function() {
        var i, _i, _ref, _x, _y;
        this.tail = new this.paper.Path();
        _y = this.settings.height - settings.general.bottomOffset - (settings.tail.width * 1.5);
        for (i = _i = 0, _ref = settings.tail.segments; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _x = this.settings.width - (i * this.settings.tail.length + settings.general.rightOffset);
          this.tail.add(new this.paper.Point(_x, _y));
        }
        this.tail.style = settings.style;
        this.tail.strokeWidth = settings.tail.width;
        _y = this.settings.height - settings.general.bottomOffset - (settings.tip.radius * 0.5);
        _x = this.settings.width - settings.general.rightOffset - (settings.tail.segments * this.settings.tail.length);
        this.settings.tip.center = new this.paper.Point(_x, _y);
        this.tip = new this.paper.Path.RegularPolygon(this.settings.tip.center, 3, settings.tip.radius);
        this.tip.style = settings.style;
        return this.tip.rotate((this.settings.type === "a" ? -90 : 90));
      };

      return VelocityButton;

    })();
  });

}).call(this);
